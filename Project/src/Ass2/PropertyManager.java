/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
// ----- Assignment 2 package Imported -----
package Ass2;

// ----- Packages Imorted -----
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.*;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 *
 * @author jay bhole
 */
// ----- Entity class declaration -----
@Entity

// ----- Java Persistence Query Language declared for Property Manager -----
@NamedQueries({
    @NamedQuery(name = "getAllPropertyManagers", query = "select pm from PropertyManager pm"),
    @NamedQuery(name = "findPropertyManagerwithParameters", query = "select q from PropertyManager q where q.name = :findName")})

@Table(name = "PropertyManager")//Table name declared

public class PropertyManager implements Serializable { // property manager implements serializable interface

    private static final long serialVersionUID = 1L;

    @Id
    @Column(name = "ID") // id column name declared in table
    @GeneratedValue // Autogenerated id
    private Long id; // PropertyManager ID has been declared

    @Column(name = "managerName") // manager name column name declared in table
    private String name; // name variable declared

    @Column(name = "PhoneNumber") // phone number column declared in table
    private String phoneNumber; // phonenumber variable declared

    @OneToMany(cascade = CascadeType.PERSIST) //one-to-many relationship between entities decalred

    // ----- Array list declaration for one or many allocation of propert to manager -----
    private List<Allocation> allocations = new ArrayList<Allocation>();

    // -----Parameterized constructor declared -----
    public PropertyManager(String name, String phoneNumber) {
        this.name = name;

        this.phoneNumber = phoneNumber;

    }

    // ----- Default constructor declared -----
    public PropertyManager() {
        this("", "");
    }

    // ----- Getter setter for declared variables -----
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    // ----- Getter setter for list of allocation -----
    public List<Allocation> getAllocation() {
        return allocations;
    }

    public void setAllocation(List<Allocation> allocation) {
        this.allocations = allocation;
    }

}
